{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","toLocaleTimeString","timerInterval","handleDocument","setState","window","console","log","this","setInterval","prevProps","oldName","name","newName","props","clearInterval","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","nameInterval","changeClockName","showClock","hideClock","document","addEventListener","className","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,cAAgB,EALlB,EAwBEC,eAAiB,WACf,IAAMJ,GAAO,IAAIC,MAAOC,qBAExB,EAAKG,SAAS,CAAEL,SAChBM,OAAOC,QAAQC,IAAIR,IA5BvB,uDAOE,WACES,KAAKN,cAAgBG,OAAOI,YAAYD,KAAKL,eAAgB,OARjE,gCAWE,SAAmBO,GACjB,IAAcC,EAAYD,EAAlBE,KACMC,EAAYL,KAAKM,MAAvBF,KAEJD,IAAYE,GACdR,OAAOC,QAAQC,IAAf,uBAAmCI,EAAnC,eAAiDE,MAhBvD,kCAoBE,WACER,OAAOU,cAAcP,KAAKN,iBArB9B,oBA+BE,WACE,OACE,qCACE,4BAAIM,KAAKM,MAAMF,OADjB,kBAEcJ,KAAKV,MAAMC,aAnC/B,GAA2BiB,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJzB,MAAyB,CACvB0B,UAAU,EACVC,UAAWR,K,EAGbS,aAAe,E,EAafC,gBAAkB,WAChB,EAAKvB,SAAS,CAAEqB,UAAWR,O,EAG7BW,UAAY,WACV,EAAKxB,SAAS,CAAEoB,UAAU,K,EAG5BK,UAAY,WACV,EAAKzB,SAAS,CAAEoB,UAAU,K,uDApB5B,WACEM,SAASC,iBAAiB,QAASvB,KAAKoB,WACxCE,SAASC,iBAAiB,cAAevB,KAAKqB,WAE9CrB,KAAKkB,aAAerB,OAAOI,YAAYD,KAAKmB,gBAAiB,Q,kCAG/D,WACEZ,cAAcP,KAAKkB,gB,oBAerB,WACE,MAAgClB,KAAKV,MAA7B2B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKQ,UAAU,MAAf,UACE,6CAEA,qBAAKA,UAAU,QAAf,SACGR,GAAY,cAAC,EAAD,CAAOZ,KAAMa,a,GAvClBT,aA8CHO,IC1DfU,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.833faf11.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  timerInterval = 0;\n\n  componentDidMount() {\n    this.timerInterval = window.setInterval(this.handleDocument, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: oldName } = prevProps;\n    const { name: newName } = this.props;\n\n    if (oldName !== newName) {\n      window.console.log(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerInterval);\n  }\n\n  handleDocument = () => {\n    const date = new Date().toLocaleTimeString();\n\n    this.setState({ date });\n    window.console.log(date);\n  };\n\n  render(): ReactNode {\n    return (\n      <>\n        <p>{this.props.name}</p>\n        {`time is ${this.state.date}`}\n      </>\n    );\n  }\n}\n","import { Component, ReactNode } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  nameInterval = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.showClock);\n    document.addEventListener('contextmenu', this.hideClock);\n\n    this.nameInterval = window.setInterval(this.changeClockName, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameInterval);\n  }\n\n  changeClockName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render(): ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <div className=\"clock\">\n          {hasClock && <Clock name={clockName} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}